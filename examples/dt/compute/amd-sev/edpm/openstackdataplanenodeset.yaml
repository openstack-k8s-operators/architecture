apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneNodeSet
metadata:
  name: openstack-edpm-amd-sev
spec:
  env:
    - name: ANSIBLE_FORCE_COLOR
      value: "True"
  services:
    - bootstrap
    - configure-network
    - validate-network
    - install-os
    - configure-os
    - run-os
    - libvirt
    - ovn
    - neutron-metadata
    - nova-amd
  preProvisioned: true
  nodes:
    edpm-computeamdsev-0:
      ansible:
        ansibleHost: 192.168.122.100 # CHANGEME
      hostName: edpm-computeamdsev-0
      networks:
      - defaultRoute: true
        fixedIP: 192.168.122.100 # CHANGEME
        name: CtlPlane
        subnetName: subnet1
      - name: InternalApi
        subnetName: subnet1
      - name: Storage
        subnetName: subnet1
      - name: Tenant
        subnetName: subnet1
    edpm-computeamdsev-1:
      ansible:
        ansibleHost: 192.168.122.101 # CHANGEME
      hostName: edpm-computeamdsev-1
      networks:
      - defaultRoute: true
        fixedIP: 192.168.122.101 # CHANGEME
        name: CtlPlane
        subnetName: subnet1
      - name: InternalApi
        subnetName: subnet1
      - name: Storage
        subnetName: subnet1
      - name: Tenant
        subnetName: subnet1
  networkAttachments:
    - ctlplane
  nodeTemplate:
    ansibleSSHPrivateKeySecret: dataplane-ansible-ssh-private-key-secret
    managementNetwork: ctlplane
    ansible:
      ansibleUser: cloud-admin
      ansiblePort: 22
      ansibleVars:
        # CHANGEME -- see https://access.redhat.com/solutions/253273
        # edpm_bootstrap_command: |
        #       subscription-manager register --username <subscription_manager_username> --password <subscription_manager_password>
        #       podman login -u <registry_username> -p <registry_password> registry.redhat.io
        service_net_map:
          nova_api_network: internal_api
          nova_libvirt_network: internal_api
        # CHANGEME
        timesync_ntp_servers:
          - hostname: clock.redhat.com
        # CPU pinning settings
        edpm_kernel_args: "hugepagesz=1GB hugepages=32 default_hugepagesz=1GB iommu=pt mem_encrypt=on kvm kvm_amd.sev=1"
        # edpm_network_config
        # These vars are edpm_network_config role vars
        edpm_network_config_hide_sensitive_logs: false
        # CHANGEME (network_config[0].members[0].name) ---v
        # CHANGEME (network_config[1].members[0].name) ---v
        edpm_network_config_template: |
          ---
          {% set mtu_list = [ctlplane_mtu] %}
          {% for network in role_networks %}
          {{ mtu_list.append(lookup('vars', networks_lower[network] ~ '_mtu')) }}
          {%- endfor %}
          {% set min_viable_mtu = mtu_list | max %}
          network_config:
          - type: ovs_bridge
            name: {{ neutron_physical_bridge_name }}
            mtu: {{ min_viable_mtu }}
            use_dhcp: false
            dns_servers: {{ ctlplane_dns_nameservers }}
            domain: {{ dns_search_domains }}
            addresses:
            - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_subnet_cidr }}
            routes: {{ ctlplane_host_routes }}
            members:
            - type: interface
              name: enp7s0
              mtu: {{ min_viable_mtu }}
              # force the MAC address of the bridge to this interface
              primary: true
          {% for network in role_networks %}
            - type: vlan
              mtu: {{ lookup('vars', networks_lower[network] ~ '_mtu') }}
              vlan_id: {{ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
              addresses:
              - ip_netmask:
                  {{ lookup('vars', networks_lower[network] ~ '_ip') }}/{{ lookup('vars', networks_lower[network] ~ '_cidr') }}
              routes: {{ lookup('vars', networks_lower[network] ~ '_host_routes') }}
          {% endfor %}

        # These vars are for the network config templates themselves and are
        # considered EDPM network defaults.
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: eth0
        # edpm_nodes_validation
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_nodes_validation_validate_gateway_icmp: false
        dns_search_domains: []
        gather_facts: false
        enable_debug: false
        # edpm firewall, change the allowed CIDR if needed
        edpm_sshd_configure_firewall: true
        edpm_sshd_allowed_ranges:
          - 192.168.122.0/24 # CHANGEME
        # SELinux module
        edpm_selinux_mode: enforcing
