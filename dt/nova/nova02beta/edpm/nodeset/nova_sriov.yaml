---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cpu-pinning-nova
data:
  25-cpu-pinning-nova.conf: _replaced_
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sriov-nova
data:
  03-sriov-nova.conf: _replaced_
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nvidia-mdev-config
data:
  nvidia_driver_url: _replaced_
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneService
metadata:
  name: nova-custom-sriov
spec:
  label: dataplane-deployment-nova-custom-sriov
  edpmServiceType: nova
  dataSources:
    - configMapRef:
        name: cpu-pinning-nova
    - configMapRef:
        name: sriov-nova
    - secretRef:
        name: nova-cell1-compute-config
    - secretRef:
        name: nova-migration-ssh-key
  playbook: osp.edpm.nova
  tlsCerts:
    default:
      contents:
        - dnsnames
        - ips
      networks:
        - ctlplane
      issuer: osp-rootca-issuer-internal
  caCerts: combined-ca-bundle
---
apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneService
metadata:
  name: install-nvidia-mdev
  namespace: openstack
spec:
  dataSources:
    - configMapRef:
        name: nvidia-mdev-config
  playbookContents: |
    - name: Install Nvidia Driver
      hosts: all
      tasks:
        - name: Blacklist nouveau
          become: true
          ansible.builtin.copy:
            dest: "/etc/modprobe.d/blacklist-nouveau.conf"
            mode: "0644"
            content: |-
              blacklist nouveau
              options nouveau modeset=0
            force: false
          register: _blacklist_nouveau
        - name: Get the Nvidia Driver URL
          delegate_to: localhost
          ansible.builtin.set_fact:
            nvidia_rpm_url: "{{ lookup('file', '/var/lib/openstack/configs/install-nvidia-mdev/nvidia_driver_url') | from_yaml }}"
        - name: Gather the package facts
          ansible.builtin.package_facts:
            manager: auto
        - name: Install nvidia driver RPM either from path or URL
          become: true
          ansible.builtin.dnf:
            name: "{{ nvidia_rpm_url }}"
            state: present
            disable_gpg_check: true
          when: nvidia_rpm_url not in ansible_facts.packages
          register: _nvidia_driver_install
        - name: Check if grub2-mkconfig has --update-bls-cmdline option
          ansible.builtin.shell:
            cmd: grub2-mkconfig --help | grep '\-\-update-bls-cmdline'
          ignore_errors: true
          register: check_update_bls_cmdline
          changed_when: false
        - name: Regenerate initramfs
          become: true
          ansible.builtin.command: "{{ item }}"
          loop:
            - 'dracut --force'
            - >-
              grub2-mkconfig -o /boot/grub2/grub.cfg
              {{ '--update-bls-cmdline'
              if check_update_bls_cmdline.rc == 0
              else '' }}
          when: _blacklist_nouveau.changed or _nvidia_driver_install.changed
